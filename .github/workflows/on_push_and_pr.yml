name: CI Pipeline for Kruize UI

# Triggers the workflow on push or pull request to the mvp_demo branch
on:
  push:
    branches: [mvp_demo]
  pull_request:
    branches: [mvp_demo]

# Define the jobs to run as part of this workflow

jobs:
  #Job 1
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (specify version if needed)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm config set legacy-peer-deps true && npm install

      # Step 4: Build the UI
      - name: Build UI
        run: npm run build

  #Job 2
  unit-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (specify version if needed)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm config set legacy-peer-deps true && npm install

      # # Step 4: Run Tests
      - name: Run Tests
        run: npm run test

  deploy_kruize:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      # Step 2: Checkout the additional repository (kruize/autotune)
      - name: Checkout kruize/autotune repository
        uses: actions/checkout@v3
        with:
          repository: kruize/autotune
          ref: mvp_demo
          path: autotune-repo
      # Setup Minikube
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: 'v1.16.0'
          kubernetes version: 'v1.19.2'

      - name: Display cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system

      # Install Prometheus
      - name: Install Prometheus
        run: |
          cd scripts
          ./prometheus_on_minikube.sh -as

      # Deploy Kruize
      - name: Deploy Kruize
        run: |
          ./deploy.sh -c minikube
          sleep 20

      # Capture logs
      - name: Capture logs
        if: always()
        run: |
          ./scripts/ffdc.sh -d ${GITHUB_WORKSPACE}

      - name: Archive results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: kruize-logs
          path: ./${GITHUB_WORKSPACE}
          retention-days: 2
